version: "3"

services:
  web:
    build: ./src/
    command: sh -c "python3 /app/main.py"
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  nginx:
    image: nginx:1.23
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/api.conf:/etc/nginx/conf.d/api.conf:ro
    depends_on:
      - web
    ports:
      - 80:80
    networks:
      - backend

  etl:
    build: ./etl/
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      elasticsearch:
        condition: service_healthy
      db:
        condition: service_healthy

  elasticsearch:
    image: elasticsearch:8.6.2
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - backend
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  redis:
    image: redis:latest
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    volumes:
       - ./postgres:/data/postgres
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 50

networks:
  backend:
